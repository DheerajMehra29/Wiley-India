CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');
__________________________________________________________________________________________________________________________________

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
(001, 5000, '16-02-20'),
(002, 3000, '16-06-11'),
(003, 4000, '16-02-20'),
(001, 4500, '16-02-20'),
(002, 3500, '16-06-11');

_____________________________________________________________________________________________________________________________________________

CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
(001, 'Manager', '2016-02-20 00:00:00'),
(002, 'Executive', '2016-06-11 00:00:00'),
(008, 'Executive', '2016-06-11 00:00:00'),
(005, 'Manager', '2016-06-11 00:00:00'),
(004, 'Asst. Manager', '2016-06-11 00:00:00'),
(007, 'Executive', '2016-06-11 00:00:00'),
(006, 'Lead', '2016-06-11 00:00:00'),
(003, 'Lead', '2016-06-11 00:00:00');

____________________________________________________________________________________________________________________________________
QUESTIONS-------

 

Write an SQL query to fetch “FIRST_NAME” from Worker table using the alias name as <WORKER_NAME>

Write an SQL query to fetch “FIRST_NAME” from Worker table in upper case.

Write an SQL query to fetch unique values of DEPARTMENT from Worker table.

Write an SQL query to print the first three characters of  FIRST_NAME from Worker table.

Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from Worker table.

Write an SQL query to print the FIRST_NAME from Worker table after removing white spaces from the right side.

Write an SQL query to print the DEPARTMENT from Worker table after removing white spaces from the left side.

Write an SQL query that fetches the unique values of DEPARTMENT from Worker table and prints its length.

Write an SQL query to print the FIRST_NAME from Worker table after replacing ‘a’ with ‘A’.

Write an SQL query to print the FIRST_NAME and LAST_NAME from Worker table into a single column COMPLETE_NAME. A space char should separate them.

Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.

Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.

Write an SQL query to print details for Workers with the first name as “Vipul” and “Satish” from Worker table.

Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from Worker table.

Write an SQL query to print details of Workers with DEPARTMENT name as “Admin”.

Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.

Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.

Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.

Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.

Write an SQL query to print details of the Workers who have joined in Feb’2014.

Write an SQL query to fetch the count of employees working in the department ‘Admin’.

Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000.

Write an SQL query to fetch the no. of workers for each department in the descending order.

Write an SQL query to print details of the Workers who are also Managers.

Write an SQL query to fetch duplicate records having matching data in some fields of a table.

Write an SQL query to show only odd rows from a table.

Write an SQL query to show only even rows from a table.

Write an SQL query to clone a new table from another table.

Write an SQL query to fetch intersecting records of two tables.

Write an SQL query to show records from one table that another table does not have.

Write an SQL query to show the current date and time.

Write an SQL query to show the top n (say 10) records of a table.

Write an SQL query to determine the nth (say n=5) highest salary from a table.

Write an SQL query to determine the nth (say n=5) highest salary from a table.

Write an SQL query to determine the 5th highest salary without using TOP or limit method.

Write an SQL query to fetch the list of employees with the same salary.

Write an SQL query to show the second highest salary from a table.

Write an SQL query to show one row twice in results from a table.

Write an SQL query to fetch intersecting records of two tables.

Write an SQL query to show records from one table that another table does not have.






Write an SQL query to fetch the first 50% records from a table.

Write an SQL query to fetch the departments that have less than five people in it.

Write an SQL query to show all departments along with the number of people in there.

Write an SQL query to show the last record from a table.

Write an SQL query to fetch the first row of a table.

Write an SQL query to fetch the last five records from a table.

Write an SQL query to print the name of employees having the highest salary in each department.

Write an SQL query to fetch three max salaries from a table.

Write an SQL query to fetch three min salaries from a table.

Write an SQL query to fetch nth max salaries from a table.

Write an SQL query to fetch departments along with the total salaries paid for each of them.

Write an SQL query to fetch the names of workers who earn the highest salary.
____________________________________________________________________________________________________________________________________

ANSWER-------->  


 SELECT FIRST_NAME as WORKER_NAME from Worker;
 SELECT UPPER(FIRST_NAME) from Worker;
 SELECT DISTINCT DEPARTMENT from Worker;
 SELECT SUBSTRING(FIRST_NAME,1,3) from Worker;
 SELECT INSTR(FIRST_NAME,BINARY'a') from Worker where FIRST_NAME = 'Amitabh';
 SELECT LTRIM(FIRST_NAME) from Worker;
 SELECT RTRIM(FIRST_NAME) from Worker;  
 SELECT DISTINCT LEN( FIRST_NAME) from Worker;
 SELECT REPLACE(FIRST_NAME,'a','A') from Worker;
 SELECT CONCAT_WS(" ",FIRST_NAME,LAST_NAME) as COMPLETE_NAME from Worker;
 SELECT * from Worker order by FIRST_NAME;
 SELECT * from Worker order by FIRST_NAME,DEPARTMENT desc;
 SELECT * from Worker where FIRST_NAME='Vipul' or FIRST_NAME='Satish';
 SELECT * from Worker where FIRST_NAME<>'Vipul' AND FIRST_NAME<>'Satish';
 SELECT * from Worker where DEPARTMENT='Admin%';
 SELECT * from Worker where FIRST_NAME like '%a%';
 SELECT * from Worker where FIRST_NAME like '%a';
 SELECT * from Worker where FIRST_NAME like '_____h';
 SELECT * from Worker where salary between 100000 and 500000;
 SELECT CONCAT_WS(" ",FIRST_NAME,LAST_NAME) from Worker where salary between 50000 and 100000;
 SELECT * from Worker where year(JOINING_DATE) = 2014 and month(JOINING_DATE)=2;
 SELECT count(*) from Worker where DEPARTMENT='Admin';
 SELECT DEPARTMENT,count(*) from Worker group by DEPARTMENT order by count(*) desc;
 SELECT * from Worker join Title on Worker.WORKER_ID=Title.WORKER_REF_ID where Title.WORKER_TITLE='Manager';
 SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*) FROM Title GROUP BY WORKER_TITLE, AFFECTED_FROM Having Count(*) > 1;
 SELECT * from Worker Where Mod(WORKER_ID, 2)= 0;
 SELECT * from Worker Where Mod(WORKER_ID, 2)<>0;
 SELECT * from Worker NOT EXISTS(SELECT * from Title where Worker.WORKER_ID=Title.WORKER_REF_ID;
 SELECT NOW();
 SELECT * from Worker order by SALARY desc LIMIT 10;
 SELECT * from Worker order by SALARY desc LIMIT 4,1;
 SELECT DISTINCT a.WORKER_ID, a.FIRST_NAME, a.Salary from Worker a, Worker b where a.Salary = b.Salary and a.WORKER_ID != b.WORKER_ID;
 SELECT SALARY from Worker order by SALARY limit desc 1,1;
 SELECT FIRST_NAME, DEPARTMENT from Worker where Worker.DEPARTMENT='Account' union all SELECT FIRST_NAME, DEPARTMENT from Worker  where Worker.DEPARTMENT='Account';
 SELECT * FROM ( SELECT @row := @row + 1 AS rownum, FIRST_NAME, LAST_NAME FROM ( SELECT @row := 0) r, Worker ) ranked WHERE MOD(rownum, 2) = 1;
 SELECT * from Worker w1 where 4=(SELECT count(DISTINCT salary) from Worker w2 where w2.salary>w1.salary);
 CREATE TABLE <Table2> SELECT * from <Table1>; // creates table2 and copies content of table1;
 CREATE TABLE Demo5 like Demo1; // Only copies structure
 INSERT INTO Demo5 SELECT * FROM Demo1;// another method after creation of table;
 SELECT FIRST_NAME,SALARY from Worker where salary=(SELECT salary from Worker group by SALARY having count(*)>1);
 SELECT * FROM Worker WHERE WORKER_ID=1 UNION ALL SELECT * FROM Worker WHERE WORKER_ID=1;

______________________________________________________________________________________________________________________________

 SELECT * from Worker Where WORKER_ID<=(SELECT Count(WORKER_ID)/2 from Worker);
 SELECT DEPARTMENT, Count(WORKER_ID) FROM Worker GROUP BY DEPARTMENT HAVING COUNT(WORKER_ID) < 5;
 SELECT DEPARTMENT, Count(DEPARTMENT) from Worker GROUP BY DEPARTMENT;
 SELECT * from Worker where WORKER_ID = (SELECT max(WORKER_ID) from Worker);
 SELECT * from Worker where WORKER_ID = (SELECT min(WORKER_ID) from Worker);
 //**--- SELECT * FROM WORKER_ID > (SELECT COUNT(WORKER_ID)-5 FROM WOrker);
 //** --- SELECT * from Worker WHERE WORKER_ID <=5 UNION SELECT * from (SELECT * from Worker as a order by a.WORKER_ID DESC) as b Where b.WORKER_ID <=5;
 // 2 == SELECT CONCAT(W1.FIRST_NAME, " ", W1.LAST_NAME) AS NAME, W1.SALARY, DEPARTMENT FROM Worker W1 WHERE SALARY IN (SELECT MAX(SALARY) FROM Worker W2 GROUP BY W2.Department);
 // 2 == SELECT * FROM Worker WHERE (department,Salary) IN (SELECT department , max(Salary) From Worker GROUP BY department );
 // 2 == SELECT a.DEPARTMENT,a.CONCAT_WS(" ",FIRST_NAME,LAST_NAME),a.SALARY from(SELECT max(Salary),DEPARTMENT from Worker group by DEPARTMENT) as DEP Join Worker a on DEP.DEPARTMENT=a.DEPARTMENT and DEP.TotalSalary=a.Salary;
 SELECT SALARY from Worker order by SALARY desc limit 0,3;
 SELECT SALARY from Worker order by SALARY limit 0,3;
 SELECT * from Worker Order by SALARY desc limit n-1,1;
 SELECT DEPARTMENT, Sum(Salary) from Worker group by DEPARTMENT;
 SELECT  CONCAT_WS(" ",FIRST_NAME,LAST_NAME), SALARY from Worker WHERE SALARY=(SELECT max(SALARY) from Worker);

 


